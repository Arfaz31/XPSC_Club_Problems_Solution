#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++)
            cin >> a[i];

        //  count frequency using map
        map<int, int> freq;
        for (int x : a)
            freq[x]++;

        // find maximum frequency
        int maxFreq = 0;
        for (auto &p : freq)
            maxFreq = max(maxFreq, p.second);

        int result;

        if (maxFreq <= n / 2)
        {

            result = n % 2;
        }
        else
        {

            result = 2 * maxFreq - n;
        }
        cout << result << "\n";
    }
    return 0;
}

// ЁЯФ╖ Case 1: ржпржЦржи maxFreq <= n/2

// ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ тАФ
// рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ ржпрзЗржЗ рж╕ржВржЦрзНржпрж╛ ржЖржЫрзЗ, рж╕рзЗржЯрж╛рж░ рж╕ржВржЦрзНржпрж╛ржУ ржЕрж░рзНржзрзЗржХ ржмрж╛ рждрж╛рж░ ржХржоред

// ЁЯСЙ рждрж╛рж╣рж▓рзЗ рждрзБржорж┐ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ рж╕ржВржЦрзНржпрж╛рж░ ржкрж╛рж╢рзЗ ржПржХржЯрж╛ ржнрж┐ржирзНржи рж╕ржВржЦрзНржпрж╛ ржЦрзБржБржЬрзЗ ржкрж╛ржмрзЗ pair ржмрж╛ржирж╛ржирзЛрж░ ржЬржирзНржпред

// ржЙржжрж╛рж╣рж░ржг:
// a = [1,2,3,4,5,6]
// ржПржЦрж╛ржирзЗ рж╕ржм ржнрж┐ржирзНржи тАФ maxFreq = 1, n/2 = 3
// рждрзБржорж┐ pair ржХрж░рждрзЗ ржкрж╛рж░рзЛ:
// (1,2), (3,4), (5,6)
// рж╕ржм ржорзБржЫрзЗ ржпрж╛ржмрзЗ тЖТ remaining = 0.

// ржЖрж░ ржпржжрж┐ n odd рж╣рзЯ, ржпрзЗржоржи:
// a = [1,2,3]
// ржПржХржЯрж╛ unmatched (ржпрзЗржоржи 3) ржерзЗржХрзЗ ржпрж╛ржмрзЗ тЖТ remaining = 1.

// ЁЯФ╖ Case 2: ржпржЦржи maxFreq > n/2

// ржорж╛ржирзЗ рж╣ржЪрзНржЫрзЗ тАФ
// ржПржХржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржПржд ржмрзЗрж╢рж┐ ржПрж╕рзЗржЫрзЗ ржпрзЗ,
// рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ pair ржмрж╛ржирж╛ржирзЛрж░ ржорждрзЛ ржмрж╛ржХрж┐ ржнрж┐ржирзНржи рж╕ржВржЦрзНржпрж╛ ржХржорзЗ ржЧрзЗржЫрзЗред

// рждрж╛рж╣рж▓рзЗ:

// рждрзБржорж┐ ржкрзНрж░рждрж┐ржмрж╛рж░ maxFreq ржерзЗржХрзЗ ржПржХржЯрж╛ element ржЖрж░ others ржерзЗржХрзЗ ржПржХржЯрж╛ element pair ржХрж░рзЗ ржмрж╛ржж ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗред

// ржХрж┐ржирзНрждрзБ ржПржХрж╕ржорзЯ others рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржмрзЗред

// рждржЦржи maxFreq ржПрж░ ржХрж┐ржЫрзБ elements unmatched ржерзЗржХрзЗ ржпрж╛ржмрзЗред

// | ржкрж░рж┐рж╕рзНржерж┐рждрж┐                                                      | ржмрзНржпрж╛ржЦрзНржпрж╛                                                      | formula         |
// | ------------------------------------------------------------ | --------------------------------------------------------- | --------------- |
// | рзз. ржпржЦржи рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рж╛ balance ржЖржЫрзЗ (рж╕ржмрж╛ржЗ ржкрзНрж░рж╛рзЯ рж╕ржорж╛ржи рж╕ржВржЦрзНржпрж╛рзЯ ржЖржЫрзЗ)    | рж╕ржм pair рж╣рзЯрзЗ ржпрж╛ржмрзЗ, рж╢рзБржзрзБ parity ржЕржирзБржпрж╛рзЯрзА рзж ржмрж╛ рззржЯрж╛ ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗ    | `n % 2`         |
// | рзия╕П. ржпржЦржи ржПржХржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржЕржирзЗржХ ржмрзЗрж╢рж┐ ржПрж╕рзЗржЫрзЗ (majority element)       | ржЕржирзНржпржЧрзБрж▓рзЛ рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржмрзЗ, ржХрж┐ржЫрзБ majority ржмрж╛ржХрж┐ ржерж╛ржХржмрзЗ            | `2*maxFreq - n` |

// ржзрж░рж╛ ржпрж╛ржХ:

// рж▓рж╛рж▓ ржмрж▓рзЗрж░ рж╕ржВржЦрзНржпрж╛ ржмрзЗрж╢рж┐ = maxFreq

// ржЕржирзНржп ржмрж▓рзЗрж░ рж╕ржВржЦрзНржпрж╛ ржХржо = n - maxFreq

// рждрзБржорж┐ pair ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржпрждржмрж╛рж░ тАЬржЕржирзНржп ржмрж▓тАЭ ржЖржЫрзЗ рждрждржмрж╛рж░ тАФ
// ржХрж╛рж░ржг ржкрзНрж░рждрж┐ржЯрж┐ ржЕржирзНржп ржмрж▓рзЗрж░ ржЬржирзНржп ржПржХржЯрж╛ ржХрж░рзЗ рж▓рж╛рж▓ ржмрж▓ ржирж┐рждрзЗ ржкрж╛рж░рзЛред

// рждрж╛рж╣рж▓рзЗ pair ржХрж░рж╛ ржпрж╛ржмрзЗ (n - maxFreq) ржмрж╛рж░ред

// ржкрзНрж░рждрж┐ pair-ржП рзиржЯрж╛ ржмрж▓ ржлрзЗрж▓рж╛ рж╣рзЯред
// рждрж╛рж╣рж▓рзЗ ржорзЛржЯ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ ржмрж▓ = 2 * (n - maxFreq)ред

// ЁЯФ╣ ржПржЦржи ржмрзНржпрж╛ржЧрзЗ ржмрж╛ржХрж┐ ржмрж▓ ржХржд?

// ржорзЛржЯ ржЫрж┐рж▓ n ржЯрж╛ ржмрж▓ред
// ржлрзЗрж▓рзЗ ржжрж┐рзЯрзЗржЫрзЛ 2*(n - maxFreq) ржЯрж╛ ржмрж▓ред

// рждрж╛рж╣рж▓рзЗ ржмрж╛ржХрж┐ ржерж╛ржХржмрзЗ:remaining = n - 2*(n - maxFreq)
// ржПржЦржи ржПржЗржЯрж╛ржХрзЗ рж╕рж░рж▓ ржХрж░рж┐ (simplify ржХрж░рж┐):
// remaining = n - 2n + 2*maxFreq
// remaining = 2*maxFreq - n

// ЁЯФ╣ ржПржЦржи ржЙржжрж╛рж╣рж░ржг ржжрж┐ржЗ

// ржзрж░рж╛ ржпрж╛ржХ n = 7,
// ржЖрж░ рж▓рж╛рж▓ ржмрж▓ ржЖржЫрзЗ maxFreq = 5 ржЯрж╛,
// ржЕржирзНржп ржмрж▓ рзиржЯрж╛ред

// рждрзБржорж┐ pair ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ рзи ржмрж╛рж░ (ржкрзНрж░рждрж┐ ржмрж╛рж░ рззржЯрж╛ рж▓рж╛рж▓ + рззржЯрж╛ ржЕржирзНржп)ред
// ржПржЗ рзиржЯрж╛ pair-ржП рзкржЯрж╛ ржмрж▓ ржорзБржЫрзЗ ржпрж╛ржмрзЗред

// ржмрж╛ржХрж┐ ржерж╛ржХржмрзЗ 7 - 4 = 3 ржЯрж╛ ржмрж▓ред
// ржлрж░рзНржорзБрж▓рж╛рзЯ ржмрж╕рж╛ржУ: 2*maxFreq - n = 2*5 - 7 = 10 - 7 = 3 тЬЕ

// ржХрж┐ржЫрзБ ржмрж╛рж╕рзНрждржм ржЙржжрж╛рж╣рж░ржг (ржЯрзЗрж╕рзНржЯ ржХрж░рзЗ ржжрзЗржЦрзЗ ржирзЗржУрзЯрж╛)

// a = [1,6,1,1,4,4], n=6, maxFreq=3 тЖТ maxFreq <= 3 (n/2=3) тЖТ result = 6%2 = 0

// a = [1,2], n=2, maxFreq=1 тЖТ result = 0

// a = [1,1], n=2, maxFreq=2 тЖТ maxFreq > n/2 тЖТ result = 2*2 - 2 = 2

// a = [4,5,4,5,4], n=5, maxFreq=3 тЖТ maxFreq > n/2 (since n/2 = 2) тЖТ result = 6 - 5 = 1

// тАФall match expected.