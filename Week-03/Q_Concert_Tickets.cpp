#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m;
    cin >> n >> m;

    multiset<int> tickets;
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        tickets.insert(x);
    }

    for (int i = 0; i < m; i++)
    {
        int t;
        cin >> t;

        // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ element ‡¶Ø‡ßá‡¶ü‡¶æ t ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá strictly ‡¶¨‡ßú
        auto it = tickets.upper_bound(t);

        if (it == tickets.begin())
        {
            // ‡¶ï‡ßã‡¶®‡ßã ticket <= t ‡¶®‡ßá‡¶á
            cout << -1 << "\n";
        }
        else
        {
            --it; // ‡¶è‡¶ñ‡¶® *it ‚â§ t
            cout << *it << "\n";
            tickets.erase(it); // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶≤
        }
    }
}

// üîπ Step 2: if (it == tickets.begin())

// ‡¶è‡¶ñ‡¶® ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‚Äî
// upper_bound(t) ‡¶Ø‡ßá‡¶á ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ‡ßü ‡¶ó‡ßá‡¶õ‡ßá, ‡¶∏‡ßá‡¶ü‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ‡•§

// ‡¶Ø‡¶¶‡¶ø it == tickets.begin(),
// ‡¶Æ‡¶æ‡¶®‡ßá multiset-‡¶è‡¶∞ ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá‡¶á ‡¶ö‡¶≤‡ßá ‡¶è‡¶∏‡ßá‡¶õ‡ßá,
// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶∏‡¶¨ element-‡¶á t ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßú,
// ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ï‡ßã‡¶®‡ßã ticket ‚â§ t ‡¶®‡ßá‡¶á‡•§

// ‚úÖ ‡¶§‡¶æ‡¶á -1 print ‡¶π‡¶¨‡ßá‡•§

// t = 2
// tickets = {3, 5, 7, 8}

// upper_bound(2) ‚Üí tickets.begin() pointing 3
// ==> ‡¶∏‡¶¨ ‡¶¶‡¶æ‡¶Æ 2 ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßú
// Output: -1

// Step 3: --it; // ‡¶è‡¶ñ‡¶® *it ‚â§ t

// ‡¶Ø‡¶¶‡¶ø it != tickets.begin(),
// ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ï ‡¶ß‡¶æ‡¶™ ‡¶™‡ßá‡¶õ‡¶®‡ßá ‡¶Ø‡¶æ‡¶á (--it),
// ‡¶ï‡¶æ‡¶∞‡¶£ upper_bound(t) ‡¶è‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ element‡¶ü‡¶æ‡¶á ‡¶π‡¶≤‡ßã
// t ‡¶è‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶® ‡¶¨‡¶æ ‡¶õ‡ßã‡¶ü ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßú ‡¶¶‡¶æ‡¶Æ‡•§

// ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:
// t = 6
// tickets = {3, 5, 5, 7, 8}

// upper_bound(6) ‚Üí points to 7
// --it ‚Üí ‡¶è‡¶ñ‡¶® points to 5
// => *it = 5
